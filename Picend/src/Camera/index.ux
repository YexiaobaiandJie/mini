<template>
  <div class="demo-page">
    <input class="btn" type="button" value="调取拍照页面" onclick="switchTakePic" />
    <div class="takePicPage" if="showPicPage">
      <camera id="camera" class="camera" deviceposition="{{deviceposition}}" flash="{{flash}}" onerror="handlerError">
      </camera>
      <div class="pannel">
        <input type="button" value="拍" class="pannel-btn" onclick="takePhoto"></input>
        <input class="switchCamera pannel-btn" type="button" value="{{deviceposition}}" onclick="switchCamera"></input>
        <input class="switchFlash pannel-btn" type="button" value="{{flashText}}" onclick="switchFlash"></input>
        <input type="button" value="推荐页" class="pannel-btn" onclick="jumpTomain"></input>
        <image src="{{pictureUrl}}" class="picture"></image>
      </div>
      <div class="info-pannel">
        <text>悬浮框</text>
      </div>
      <div class="back-btn" onclick="switchTakePic"><text>x</text></div>
    </div>
  </div>
</template>
<script>
  import router from '@system.router'
  import media from '@system.media'
  import prompt from '@system.prompt'

  export default {
    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
    data() {
      return {
        showPicPage: false,
        pictureUrl: '',
        photoQuality: 'normal',
        deviceposition: 'back',
        flash: 'auto',
        flashText: '自动'
      }
    },
    onInit() {
      this.showPicPage = false;
    },
    switchTakePic() {
      this.showPicPage = !this.showPicPage
    },
    takePhoto() {
      let _this = this;
      // 调用相机组件的照相功能
      this.$element('camera').takePhoto({
        // 通过quality参数设置照片质量 默认为normal
        quality: _this.photoQuality,
        success(data) {
          // 获取回调中的照片地址
          _this.pictureUrl = data.uri
        },
        fail(data, code) {
          console.log('take photos failed：code' + code.code)
          prompt.showToast({
            message: '用户拒绝授权'
          })
        },
        complete() {
          console.log('complete')
        }
      })
    },
    // 切换摄像头
    switchCamera(e) {
      this.deviceposition = this.deviceposition === 'back' ? 'front' : 'back'
    },
    // 切换闪关灯
    switchFlash() {
      const flashArr = ['auto', 'on', 'off', 'torch']
      const textArr = ['自动', '开', '关', '常亮']
      const index = flashArr.indexOf(this.flash)

      if (index >= 3) {
        this.flash = flashArr[0]
      }
      else {
        this.flash = flashArr[index + 1]
      }

      this.flashText = textArr[flashArr.indexOf(this.flash)]
    },
    // 权限不允许处理
    handlerError() {
      console.log('用户不允许使用摄像头')
    },
    jumpTomain() {
      // 跳转到推荐页
      router.push({
        uri: '/Demo'
      })
    }
  }
</script>
<style>
  .demo-page {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex: 1;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #09ba07;
    font-size: 30px;
    color: #ffffff;
  }

  .takePicPage {
    color: #fff;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex: 1;
  }

  .pannel {
    width: 100%;
    height: 100px;
    display: flex;
    flex-direction: row;
    justify-content: center;
  }

  .info-pannel {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 150px;
    height: 600px;
    background-color: rgba(0, 0, 0, 0.45);
  }

  .info-pannel text {
    color: rgba(255, 255, 255, 0.55);
  }

  .back-btn {
    position: absolute;
    top: 20px;
    left: 20px;
    width: 50px;
    height: 50px;
    background-color: rgba(255, 255, 255, 0.77);
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .back-btn text {
    color: coral;
  }
</style>